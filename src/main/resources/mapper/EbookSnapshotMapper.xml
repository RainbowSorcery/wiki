<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lyra.wiki.mapper.EbookSnapshotMapper">

    <insert id="initEbookSnapshot">
        insert into ebook_snapshot(ebook_id, date, view_count, vote_count, view_increase, vote_increase)
        select id, curdate(), 0, 0, 0, 0
        from ebook t1
        where not exists(select 1 from ebook_snapshot t2 where t1.id = t2.ebook_id and t2.date = curdate());
    </insert>
    <update id="updateEbookSnapshot">
        update ebook_snapshot t1 left join (select ebook_id, vote_count, view_count
                                            from ebook_snapshot t1
                                            where t1.date = date_sub(curdate(), interval 1 day)) t2
            on t1.ebook_id = t2.ebook_id
        set t1.view_increase = (t1.view_count - ifnull(t2.view_count, 0)),
            t1.vote_increase = (t1.vote_count - ifnull(t2.vote_count, 0))
        where date = curdate()
    </update>

    <update id="updateCurrentDay">
        update ebook_snapshot t1, ebook t2
        set t1.view_count = t2.view_count,
            t1.vote_count = t2.vote_count
        where t1.ebook_id = t2.id
          and t1.date = curdate();
    </update>
    <select id="getStatistic" resultType="com.lyra.wiki.entity.vo.SnapshotStatisticVO">
        select sum(t1.vote_count)    as vote_count,
               sum(t1.view_count)    as view_count,
               sum(t1.vote_increase) as vote_increase,
               sum(t1.view_increase) as view_increase,
               date as date
        from ebook_snapshot t1
        where t1.date >= subdate(curdate(), interval 1 day)
        group by date
        order by date;
    </select>
    <select id="get30Statistic" resultType="com.lyra.wiki.entity.vo.SnapshotStatisticVO">
        select sum(t1.vote_count)    as vote_count,
               sum(t1.view_count)    as view_count,
               sum(t1.vote_increase) as vote_increase,
               sum(t1.view_increase) as view_increase,
               date as date
        from ebook_snapshot t1
        where t1.date >= subdate(curdate(), interval 30 day)
        group by date
        order by date;
    </select>
</mapper>
